<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="system.data.mockdb" type="System.Data.Common.DbProviderConfigurationHandler, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
  </configSections>
  <connectionStrings>
    <add name="TestProvider" connectionString="" providerName="Essential.Diagnostics.Tests.MockDbProvider" />
  </connectionStrings>
  <system.data>
    <DbProviderFactories>
      <add name="Mock Data Provider for testing" invariant="Essential.Diagnostics.Tests.MockDbProvider" description="Mock Data Provider for testing" type="Essential.Diagnostics.Tests.Utility.MockDbFactory, Essential.Diagnostics.Tests"/>
    </DbProviderFactories>
  </system.data>
  <system.diagnostics>
    <sources>
      <source name="expressionFilter1Source" switchValue="All">
        <listeners>
          <add name="inmemory1">
            <filter type="ExpressionFilter" initializeData=""/>
          </add>
        </listeners>
      </source>
      <source name="inmemory1Source" switchValue="All">
        <listeners>
          <add name="inmemory1" />
        </listeners>
      </source>
      <source name="inmemory2Source" switchValue="All">
        <listeners>
          <add name="inmemory2" />
        </listeners>
      </source>
      <source name="colored1Source" switchValue="All">
        <listeners>
          <add name="colored1" />
        </listeners>
      </source>
      <source name="colored2Source" switchValue="All">
        <listeners>
          <add name="colored2" />
        </listeners>
      </source>
      <source name="sql1Source" switchValue="All">
        <listeners>
          <add name="sql1" />
        </listeners>
      </source>
      <source name="sql2Source" switchValue="All">
        <listeners>
          <add name="sql2" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="console"
           type="System.Diagnostics.ConsoleTraceListener"
           traceOutputOptions="LogicalOperationStack" />
      <add name="inmemory1"
           type="Essential.Diagnostics.InMemoryTraceListener, Essential.Diagnostics"
           initializeData="10" />
      <add name="inmemory2"
           type="Essential.Diagnostics.InMemoryTraceListener, Essential.Diagnostics"
           initializeData="666" />
      <add name="colored1"
           type="Essential.Diagnostics.ColoredConsoleTraceListener, Essential.Diagnostics"
           template="{DateTime} {EventType}: {Message}"
           criticalColor="DarkBlue"
           errorColor="DarkGreen"
           warningColor="DarkCyan"
           informationColor="DarkRed"
           verboseColor="Gray"
           activityTracingColor="DarkGray"
           transferColor="Blue" />
      <add name="colored2"
           type="Essential.Diagnostics.ColoredConsoleTraceListener, Essential.Diagnostics"
           initializeData="true"
           convertWriteToEvent="true"
           startColor="DarkBlue"
           stopColor="DarkGreen"
           suspendColor="DarkCyan"
           resumeColor="DarkRed" />
      <add name="sql1"
           type="Essential.Diagnostics.SqlDatabaseTraceListener, Essential.Diagnostics"
           initializeData="TestProvider" />
      <add name="sql2"
           type="Essential.Diagnostics.SqlDatabaseTraceListener, Essential.Diagnostics"
           initializeData="TestProvider" 
           applicationName="App2"
           commandText="Command2"
           maxMessageLength="10" />
    </sharedListeners>
  </system.diagnostics>
</configuration>