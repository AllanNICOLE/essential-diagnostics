<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.diagnostics>
    <sharedListeners>
      <!--
        = ConsoleTraceListener =
        Writes to the console output or error stream.        
        Outputs Source, EventType, Id, and Message, plus traceOutputOptions.
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=ConsoleTraceListener
      -->
      <add name="console"
        type="System.Diagnostics.ConsoleTraceListener"
        traceOutputOptions="DateTime,ThreadId" />
      <!--
        = EventLogTraceListener =
        Writes to the Windows Event Log.
        Note: You must include an installer (that is run by an administrator)
        to create a the event log source (specified in initializeData).
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=EventLogTraceListener
  		-->
      <add name="eventlog"
        type="System.Diagnostics.EventLogTraceListener"
        initializeData="Diagnostics.Sample">
        <filter type="System.Diagnostics.EventTypeFilter"
                initializeData="Warning" />
      </add>
      <!--
        = FileLogTraceListener =
        Writes to a rolling text file
        You may need to specify the version of Visual Basic you have installed,
        and make sure the customLocation exists.
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=FileLogTraceListener
      -->
      <add name="filelog"
        type="Microsoft.VisualBasic.Logging.FileLogTraceListener, Microsoft.VisualBasic, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
        traceOutputOptions="DateTime,ThreadId"
        autoFlush="true"
        customLocation="C:\Temp\Logs"
        location="Custom"
        logFileCreationSchedule="Daily"
        maxFileSize="5000000"
        reserveDiskSpace="10000000" />
      <!--
        = XmlWriterTraceListener =
        Writes E2ETraceEvent XML fragments to a file, suitable 
        for viewing using the Service Trace Viewer tool (SvcTraceViewer.exe).
        Usually used for WCF tracing, including correlation across tiers.
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=XmlWriterTraceListener
      -->
      <add name="xmlwriter"
           type="System.Diagnostics.XmlWriterTraceListener"
           initializeData="C:\Temp\Logs\Trace.svclog" />
    </sharedListeners>
    <sources>
      <!-- 
        = Windows Communication Framework (WCF) =
        See: http://msdn.microsoft.com/en-us/library/ms730064.aspx
      -->
      <source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true">
        <listeners>
          <clear />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <clear />
        </listeners>
      </source>
      <!-- 
        = Windows Identity Foundation (WIF) =
        See: http://msdn.microsoft.com/en-us/library/ee517282.aspx 
      -->
      <source name="Microsoft.IdentityModel" switchValue="Off" />
      <!-- 
        = Other .NET Framework Sources =
        e.g. For diagnosing email use System.Net and System.Net.Sockets.
        See: http://msdn.microsoft.com/en-us/library/ms733025.aspx 
      -->
      <source name="CardSpace" switchValue="Off" />
      <source name="System.IO.Log" switchValue="Off" />
      <source name="System.Net" switchValue="Off" />
      <source name="System.Net.Sockets" switchValue="Off" />
      <source name="System.Runtime.Serialization" switchValue="Off" />
    </sources>
    <switches>
      <!--
        = SourceSwitch =
        Specify switchName (instead of switchValue) to use the same
        switch for multiple sources.
        Values can either be SourceLevels name values, decimal,
        or hexadecimal.
        -->
        <add name="SourceSwitch1" value="None,Critical,Error,Warning,Information,Verbose,ActivityTracing,All" />
        <add name="SourceSwitch2" value="0,1,3,7,15,31,0xFF00,0xFFFF" />
    </switches>
    <!--
      Legacy Trace.Write() statements (not using a TraceSource).
      Note: Turn indent off to avoid confusion for multithreaded traces.
    -->
    <trace autoflush="true" indentsize="0" >
      <listeners>
        <!-- 
          Clear the default listener for performance.
        -->
        <clear />
      </listeners>
    </trace>
  </system.diagnostics>
  <system.serviceModel>
    <diagnostics>
      <!-- 
        = Windows Communication Framework (WCF) =
        For message logging need to also turn on diagnostics in WCF.
        See: http://msdn.microsoft.com/en-us/library/ms730064.aspx
      -->
      <messageLogging
           logEntireMessage="true"
           logMalformedMessages="false"
           logMessagesAtServiceLevel="true"
           logMessagesAtTransportLevel="false"
           maxMessagesToLog="3000"
           maxSizeOfMessageToLog="2000"/>
    </diagnostics>
  </system.serviceModel>
</configuration>
