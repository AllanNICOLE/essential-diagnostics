<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <connectionStrings>
    <!--
      = diagnostics_regsql.exe tool =
      Use the following command line to install the default database on the 
      local SQL instance, using Windows credentials:
      .\diagnostics_regsql.exe -E -AD
    -->
    <add name="diagnosticsdb" 
      providerName="System.Data.SqlClient" 
      connectionString="server=.;database=diagnosticsdb;Integrated Security=SSPI" />
  </connectionStrings>
  <system.diagnostics>
    <sharedListeners>
      <!--
        = BufferedEmailTraceListener =
        Adds formatted trace messages to a buffer and sends an email when the process 
        exits, or on request.
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=BufferedEmailTraceListener
      -->
      <!--
      <add name="bufferedEmail"
        type="Essential.Diagnostics.BufferedEmailTraceListener, Essential.Diagnostics"
        initializeData="user1@example.org,user2@example.org">
        <filter type="System.Diagnostics.EventTypeFilter"
                initializeData="Information" />
      </add>
      -->
      <!--
        = ColoredConsoleTraceListener =
        Writes to the console output or error stream, using color to highlight 
        event types and allowing a customised output format.
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=ColoredConsoleTraceListener
      -->
      <add name="coloredconsole"
        type="Essential.Diagnostics.ColoredConsoleTraceListener, Essential.Diagnostics"
        template="{DateTime:HH':'mm':'ssZ} [{Thread}] {EventType} {Source} {Id}: {Message}{Data}"
        convertWriteToEvent="true" />
      <!--
        = EmailTraceListener =
	      Sends each trace message received in an email, using the specified subject and 
        body templates. Note: Set a filter to avoid flooding.
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=EmailTraceListener
      -->
      <!--
      <add name="email"
        type="Essential.Diagnostics.EmailTraceListener, Essential.Diagnostics"
        initializeData="user1@example.org,user2@example.org">
        <filter type="System.Diagnostics.EventTypeFilter"
                initializeData="Warning" />
      </add>
      -->
      <!--
        = InMemoryTraceListener =
        Records and immutable copy of trace events in memory, within a circular buffer
        of the specified size. 
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=InMemoryTraceListener
  	  -->
      <add name="inmemory"
        type="Essential.Diagnostics.InMemoryTraceListener, Essential.Diagnostics"
        initializeData="100" />      
      <!--
        = RollingFileTraceListener =
        Writes to a text file, rolling to a new file based on a filename template 
        (usually including the date).
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=RollingFileTraceListener
      -->
      <add name="rollingfile"
        type="Essential.Diagnostics.RollingFileTraceListener, Essential.Diagnostics"
        initializeData="C:\Temp\Logs\{ApplicationName}-{DateTime:yyyy-MM-dd}.log"
        convertWriteToEvent="true" />

      <!--
        = RollingXmlTraceListener =
        Writes writes E2ETraceEvent XML fragments to a text file, rolling to a new 
        file based on a filename template (usually including the date).
        The E2ETraceEvent XML fragment format can be read by the Service Trace Viewer tool.
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=RollingXmlTraceListener
      -->
      <add name="rollingxml"
        type="Essential.Diagnostics.RollingXmlTraceListener, Essential.Diagnostics"
        initializeData="C:\Temp\Logs\{ApplicationName}-{DateTime:yyyyMMdd}.svclog" />
      <!--
        = SqlDatabaseTraceListener =
        Trace listener that writes to the database connection specified into a
        table created by the diagnostics_regsql tool (in the package tools directory).
        See: http://essentialdiagnostics.codeplex.com/wikipage?title=SqlDatabaseTraceListener
      -->
      <add name="sqldatabase"
        type="Essential.Diagnostics.SqlDatabaseTraceListener, Essential.Diagnostics"
        initializeData="diagnosticsdb"
        applicationName="Diagnostics.Sample" />
    </sharedListeners>
    <sources>
      <!--
        = Sample Source =
      <source name=""
              switchValue="All|None|Critical|Error|Warning|Information|Verbose|ActivityTracing"
              switchName="">
        <listeners>
          <clear />
          <add name="" />
          <add name="" />
        </listeners>
      </source>
      -->
    </sources>
    <switches>
      <!--
        = SourceSwitch =
        Specify switchName (instead of switchValue) to use the same
        switch for multiple sources.
        Values can either be SourceLevels name values, decimal,
        or hexadecimal.
        -->
      <add name="SourceSwitch1" value="None,Critical,Error,Warning,Information,Verbose,ActivityTracing,All" />
      <add name="SourceSwitch2" value="0,1,3,7,15,31,0xFF00,0xFFFF" />
    </switches>
    <!--
      Legacy Trace.Write() statements (not using a TraceSource).
      Note: Turn indent off to avoid confusion for multithreaded traces.
    -->
    <trace autoflush="true" indentsize="0" >
      <listeners>
        <!-- 
          Clear the default listener for performance.
        -->
        <clear />
      </listeners>
    </trace>
  </system.diagnostics>
  <system.net>
    <mailSettings>
      <!--
        = Mail Settings =
        Used by email trace listeners. For production, or if using a test SMTP server 
        such as smtp4dev, change to deliveryMethod="Network" and specify your mail host.
      -->
      <smtp deliveryMethod="SpecifiedPickupDirectory" from="diagnostics@example.org">
        <network
          host="localhost"
          defaultCredentials="true" />
        <specifiedPickupDirectory pickupDirectoryLocation="C:\Temp\MailPickup" />
      </smtp>
    </mailSettings>
  </system.net>
</configuration>
